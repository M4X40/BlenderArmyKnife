import bpy
import os

findMaterial = "Wall-Tiles"
replaceMaterial = "Wall-Tiles-Red"
SelectAllObjects = False # False for only objects you select, True for all objects in scene
FindMode = "Whitelist" # Can be Whitelist or Blacklist depending on needs, disregard if above is True.


# DO NOT CHANGE ANYTHING BEYOND THIS LINE #

canRun = True

if SelectAllObjects:
    bpy.ops.object.select_all(action='SELECT')
elif FindMode.lower() == "blacklist":
    BlacklistObj = []
    for ob in bpy.context.selected_objects:
        BlacklistObj.append(ob.name)
        bpy.ops.object.select_all(action='SELECT')
elif not FindMode.lower() == "whitelist":
    print(f"[WARN] Unknown Mode: {FindMode}. Defaulting to Whitelist.")

#print(BlacklistObj)

for ob in bpy.context.selected_objects:
    try:
        if not ob.name in BlacklistObj and FindMode.lower() == "blacklist":
            print(f"Found {ob.name}")
            for mat in ob.material_slots:
                if mat.name == findMaterial:
                    mat.material = bpy.data.materials.get(replaceMaterial)
        elif FindMode.lower() == "whitelist":
            for mat in ob.material_slots:
                if mat.name == findMaterial:
                    mat.material = bpy.data.materials.get(replaceMaterial)
    except Exception:
        for mat in ob.material_slots:
            if mat.name == findMaterial:
                mat.material = bpy.data.materials.get(replaceMaterial)
